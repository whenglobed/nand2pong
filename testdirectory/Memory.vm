function Memory.init 0
push constant 2048
pop static 0
push constant 14336
pop static 1
push constant 0
pop static 3
push static 0
pop static 2
push static 3
push static 2
add
pop temp 1
push static 1
push temp 1
pop pointer 1
pop that 0
push static 3
push static 2
push constant 1
add
add
pop temp 1
push constant 0
push temp 1
pop pointer 1
pop that 0
push constant 0
return
function Memory.peek 0
push static 3
push argument 0
add
pop pointer 1
push that 0
return
function Memory.poke 0
push static 3
push argument 0
add
pop temp 1
push argument 1
push temp 1
pop pointer 1
pop that 0
push constant 0
return
function Memory.alloc 3
push argument 0
push constant 0
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 5
call Sys.error 1
pop temp 0
label IF_FALSE0
push static 2
pop local 0
label WHILE_EXP0
push local 0
push constant 0
eq
not
not
if-goto WHILE_END0
push static 3
push local 0
add
pop pointer 1
push that 0
push argument 0
gt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push static 3
push local 0
add
pop pointer 1
push that 0
push argument 0
push constant 1
add
sub
pop local 1
push local 1
push constant 4
lt
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push local 0
call Memory.removeNode 1
pop temp 0
push static 3
push local 0
push constant 1
add
add
pop temp 1
push constant 0
push temp 1
pop pointer 1
pop that 0
push local 0
return
goto IF_END2
label IF_FALSE2
push local 0
push local 1
add
push constant 1
add
pop local 2
push static 3
push local 0
add
pop temp 1
push local 1
push temp 1
pop pointer 1
pop that 0
push static 3
push local 2
push constant 1
sub
add
pop temp 1
push argument 0
push constant 1
add
push temp 1
pop pointer 1
pop that 0
push local 2
return
label IF_END2
label IF_FALSE1
push static 3
push local 0
push constant 1
add
add
pop pointer 1
push that 0
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Memory.deAlloc 0
push argument 0
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 37
call String.new 1
push constant 69
call String.appendChar 2
push constant 114
call String.appendChar 2
push constant 114
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 114
call String.appendChar 2
push constant 58
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 99
call String.appendChar 2
push constant 97
call String.appendChar 2
push constant 110
call String.appendChar 2
push constant 110
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 100
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 97
call String.appendChar 2
push constant 108
call String.appendChar 2
push constant 108
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 99
call String.appendChar 2
push constant 97
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 110
call String.appendChar 2
push constant 117
call String.appendChar 2
push constant 108
call String.appendChar 2
push constant 108
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 98
call String.appendChar 2
push constant 106
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 99
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 46
call String.appendChar 2
call Output.printString 1
pop temp 0
goto IF_END0
label IF_FALSE0
push argument 0
push constant 1
sub
call Memory.appendNode 1
pop temp 0
push argument 0
push constant 1
sub
call Memory.defragSingleBlock 1
pop temp 0
label IF_END0
push constant 0
return
function Memory.defragSingleBlock 1
push static 2
pop local 0
label WHILE_EXP0
push local 0
push constant 0
eq
not
not
if-goto WHILE_END0
push local 0
push static 3
push local 0
add
pop pointer 1
push that 0
add
push argument 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push static 3
push local 0
add
pop temp 1
push static 3
push local 0
add
pop pointer 1
push that 0
push static 3
push argument 0
add
pop pointer 1
push that 0
add
push temp 1
pop pointer 1
pop that 0
push argument 0
call Memory.removeNode 1
pop temp 0
push constant 0
return
label IF_FALSE0
push static 3
push local 0
push constant 1
add
add
pop pointer 1
push that 0
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Memory.defragRecursive 0
push static 3
push argument 0
push constant 1
add
add
pop pointer 1
push that 0
push constant 0
eq
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push static 3
push argument 0
push constant 1
add
add
pop pointer 1
push that 0
call Memory.defragRecursive 1
pop temp 0
goto IF_END0
label IF_FALSE0
push argument 0
call Memory.defragSingleBlock 1
pop temp 0
label IF_END0
push constant 0
return
function Memory.defragAll 1
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push constant 10
lt
not
if-goto WHILE_END0
push static 2
call Memory.defragRecursive 1
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Memory.appendNode 1
push static 2
pop local 0
label WHILE_EXP0
push static 3
push local 0
push constant 1
add
add
pop pointer 1
push that 0
push constant 0
eq
not
not
if-goto WHILE_END0
push static 3
push local 0
push constant 1
add
add
pop pointer 1
push that 0
pop local 0
goto WHILE_EXP0
label WHILE_END0
push static 3
push local 0
push constant 1
add
add
pop temp 1
push argument 0
push temp 1
pop pointer 1
pop that 0
push static 3
push argument 0
push constant 1
add
add
pop temp 1
push constant 0
push temp 1
pop pointer 1
pop that 0
push constant 0
return
function Memory.removeNode 2
push argument 0
push static 2
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 6
call Sys.error 1
pop temp 0
label IF_FALSE0
push static 3
push argument 0
push constant 1
add
add
pop pointer 1
push that 0
pop local 0
push static 2
pop local 1
label WHILE_EXP0
push local 1
push constant 0
eq
not
not
if-goto WHILE_END0
push static 3
push local 1
push constant 1
add
add
pop pointer 1
push that 0
push argument 0
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push static 3
push local 1
push constant 1
add
add
pop temp 1
push local 0
push temp 1
pop pointer 1
pop that 0
push constant 0
return
label IF_FALSE1
push static 3
push local 1
push constant 1
add
add
pop pointer 1
push that 0
pop local 1
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
