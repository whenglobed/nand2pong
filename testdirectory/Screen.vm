function Screen.init 0
push constant 1
neg
pop static 0
push constant 255
pop static 1
push constant 511
pop static 2
push constant 16384
pop static 3
push constant 24576
pop static 4
push constant 0
return
function Screen.clearScreen 1
push static 3
pop local 0
label WHILE_EXP0
push local 0
push static 4
lt
not
if-goto WHILE_END0
push local 0
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Screen.setColor 0
push argument 0
pop static 0
push constant 0
return
function Screen.drawPixel 4
push argument 0
push constant 0
lt
push argument 0
push static 2
gt
or
push argument 1
push constant 0
lt
or
push argument 1
push static 1
gt
or
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 7
call Sys.error 1
pop temp 0
label IF_FALSE0
push static 3
push argument 1
push constant 32
call Math.multiply 2
add
push argument 0
push constant 16
call Math.divide 2
add
pop local 0
push constant 1
pop local 1
push constant 0
pop local 2
push argument 0
push constant 16
call Math.remainder 2
pop local 3
label WHILE_EXP0
push local 2
push local 3
eq
not
not
if-goto WHILE_END0
push local 1
push local 1
add
pop local 1
push local 2
push constant 1
add
pop local 2
goto WHILE_EXP0
label WHILE_END0
push static 0
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 0
push local 0
call Memory.peek 1
push local 1
or
call Memory.poke 2
pop temp 0
goto IF_END1
label IF_FALSE1
push local 1
neg
pop local 1
push local 1
push constant 1
sub
pop local 1
push local 0
push local 0
call Memory.peek 1
push local 1
and
call Memory.poke 2
pop temp 0
label IF_END1
push constant 0
return
function Screen.drawLine 6
push argument 0
push constant 0
lt
push argument 0
push static 2
gt
or
push argument 1
push constant 0
lt
or
push argument 1
push static 1
gt
or
push argument 2
push constant 0
lt
or
push argument 2
push static 2
gt
or
push argument 3
push constant 0
lt
or
push argument 3
push static 1
gt
or
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 8
call Sys.error 1
pop temp 0
label IF_FALSE0
push argument 2
push argument 0
sub
pop local 0
push argument 3
push argument 1
sub
pop local 1
push constant 0
pop local 2
push constant 0
pop local 3
push constant 0
pop local 4
push constant 0
pop local 5
push local 0
push constant 0
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 1
neg
pop local 5
push argument 1
push argument 3
push argument 0
call Screen.drawVertical 3
pop temp 0
label IF_FALSE1
push local 1
push constant 0
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 1
neg
pop local 5
push argument 0
push argument 2
push argument 1
call Screen.drawHorizontal 3
pop temp 0
label IF_FALSE2
push local 5
not
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push local 0
push constant 0
gt
push local 1
push constant 0
gt
and
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
label WHILE_EXP0
push local 2
push local 0
push constant 1
add
lt
push local 3
push local 1
push constant 1
add
lt
and
not
if-goto WHILE_END0
push argument 0
push local 2
add
push argument 1
push local 3
add
call Screen.drawPixel 2
pop temp 0
push local 4
push constant 0
lt
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push local 2
push constant 1
add
pop local 2
push local 4
push local 1
add
pop local 4
goto IF_END5
label IF_FALSE5
push local 3
push constant 1
add
pop local 3
push local 4
push local 0
sub
pop local 4
label IF_END5
goto WHILE_EXP0
label WHILE_END0
label IF_FALSE4
push local 0
push constant 0
gt
push local 1
push constant 0
lt
and
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
label WHILE_EXP1
push local 2
push local 0
push constant 1
add
lt
push local 3
push local 1
push constant 1
sub
gt
and
not
if-goto WHILE_END1
push argument 0
push local 2
add
push argument 1
push local 3
add
call Screen.drawPixel 2
pop temp 0
push local 4
push constant 0
lt
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
push local 2
push constant 1
add
pop local 2
push local 4
push local 1
sub
pop local 4
goto IF_END7
label IF_FALSE7
push local 3
push constant 1
sub
pop local 3
push local 4
push local 0
sub
pop local 4
label IF_END7
goto WHILE_EXP1
label WHILE_END1
label IF_FALSE6
push local 0
push constant 0
lt
push local 1
push constant 0
gt
and
if-goto IF_TRUE8
goto IF_FALSE8
label IF_TRUE8
label WHILE_EXP2
push local 2
push local 0
push constant 1
sub
gt
push local 3
push local 1
push constant 1
add
lt
and
not
if-goto WHILE_END2
push argument 0
push local 2
add
push argument 1
push local 3
add
call Screen.drawPixel 2
pop temp 0
push local 4
push constant 0
lt
if-goto IF_TRUE9
goto IF_FALSE9
label IF_TRUE9
push local 2
push constant 1
sub
pop local 2
push local 4
push local 1
add
pop local 4
goto IF_END9
label IF_FALSE9
push local 3
push constant 1
add
pop local 3
push local 4
push local 0
add
pop local 4
label IF_END9
goto WHILE_EXP2
label WHILE_END2
label IF_FALSE8
push local 0
push constant 0
lt
push local 1
push constant 0
lt
and
if-goto IF_TRUE10
goto IF_FALSE10
label IF_TRUE10
label WHILE_EXP3
push local 2
push local 0
push constant 1
sub
gt
push local 3
push local 1
push constant 1
sub
gt
and
not
if-goto WHILE_END3
push argument 0
push local 2
add
push argument 1
push local 3
add
call Screen.drawPixel 2
pop temp 0
push local 4
push constant 0
lt
if-goto IF_TRUE11
goto IF_FALSE11
label IF_TRUE11
push local 2
push constant 1
sub
pop local 2
push local 4
push local 1
sub
pop local 4
goto IF_END11
label IF_FALSE11
push local 3
push constant 1
sub
pop local 3
push local 4
push local 0
add
pop local 4
label IF_END11
goto WHILE_EXP3
label WHILE_END3
label IF_FALSE10
label IF_FALSE3
push constant 0
return
function Screen.drawRectangle 0
push argument 2
push argument 0
lt
push argument 3
push argument 3
lt
or
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 9
call Sys.error 1
pop temp 0
label IF_FALSE0
label WHILE_EXP0
push argument 1
push argument 3
push constant 1
add
lt
not
if-goto WHILE_END0
push argument 0
push argument 2
push argument 1
call Screen.drawHorizontal 3
pop temp 0
push argument 1
push constant 1
add
pop argument 1
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Screen.drawCircle 3
push argument 2
neg
pop local 2
push argument 0
push constant 0
lt
push argument 0
push static 2
gt
or
push argument 1
push constant 0
lt
or
push argument 1
push static 1
gt
or
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 12
call Sys.error 1
pop temp 0
label IF_FALSE0
push argument 0
push argument 2
add
push static 2
gt
push argument 0
push argument 2
sub
push constant 0
lt
or
push argument 1
push argument 2
add
push static 1
gt
or
push argument 1
push argument 2
sub
push constant 0
lt
or
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 13
call Sys.error 1
pop temp 0
label IF_FALSE1
push argument 2
push constant 181
gt
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 13
call Sys.error 1
pop temp 0
label IF_FALSE2
label WHILE_EXP0
push local 2
push argument 2
push constant 1
add
lt
not
if-goto WHILE_END0
push argument 0
push argument 2
push argument 2
call Math.multiply 2
push local 2
push local 2
call Math.multiply 2
sub
call Math.sqrt 1
sub
pop local 0
push argument 0
push argument 2
push argument 2
call Math.multiply 2
push local 2
push local 2
call Math.multiply 2
sub
call Math.sqrt 1
add
pop local 1
push local 0
push local 1
push argument 1
push local 2
add
call Screen.drawHorizontal 3
pop temp 0
push local 2
push constant 1
add
pop local 2
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Screen.drawHorizontal 0
push argument 0
push constant 0
lt
push argument 0
push static 2
gt
or
push argument 1
push constant 0
lt
or
push argument 1
push static 2
gt
or
push argument 2
push constant 0
lt
or
push argument 2
push static 1
gt
or
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 8
call Sys.error 1
pop temp 0
label IF_FALSE0
push argument 1
push argument 0
lt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push argument 1
push argument 0
push argument 2
call Screen.drawHorizontal 3
pop temp 0
goto IF_END1
label IF_FALSE1
label WHILE_EXP0
push argument 0
push argument 1
push constant 1
add
lt
not
if-goto WHILE_END0
push argument 0
push constant 16
call Math.remainder 2
push constant 0
eq
push argument 1
push argument 0
sub
push constant 16
gt
and
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
label WHILE_EXP1
push argument 1
push argument 0
sub
push constant 16
gt
not
if-goto WHILE_END1
push argument 0
push argument 2
call Screen.fillScreenMapWord 2
pop temp 0
push argument 0
push constant 16
add
pop argument 0
goto WHILE_EXP1
label WHILE_END1
goto IF_END2
label IF_FALSE2
push argument 0
push argument 2
call Screen.drawPixel 2
pop temp 0
push argument 0
push constant 1
add
pop argument 0
label IF_END2
goto WHILE_EXP0
label WHILE_END0
label IF_END1
push constant 0
return
function Screen.drawVertical 0
push argument 0
push constant 0
lt
push argument 0
push static 1
gt
or
push argument 1
push constant 0
lt
or
push argument 1
push static 1
gt
or
push argument 2
push constant 0
lt
or
push argument 2
push static 2
gt
or
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 8
call Sys.error 1
pop temp 0
label IF_FALSE0
push argument 1
push argument 0
lt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push argument 1
push argument 0
push argument 2
call Screen.drawVertical 3
pop temp 0
goto IF_END1
label IF_FALSE1
label WHILE_EXP0
push argument 0
push argument 1
push constant 1
add
lt
not
if-goto WHILE_END0
push argument 2
push argument 0
call Screen.drawPixel 2
pop temp 0
push argument 0
push constant 1
add
pop argument 0
goto WHILE_EXP0
label WHILE_END0
label IF_END1
push constant 0
return
function Screen.fillScreenMapWord 1
push static 3
push argument 1
push constant 32
call Math.multiply 2
add
push argument 0
push constant 16
call Math.divide 2
add
pop local 0
push static 0
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 0
push constant 1
neg
call Memory.poke 2
pop temp 0
goto IF_END0
label IF_FALSE0
push local 0
push constant 0
call Memory.poke 2
pop temp 0
label IF_END0
push constant 0
return
